@use "../util" as u;

.faqs {
  &__container {
    @include u.breakpoint-up(large) {
      max-width: 50%;
    }
  }

  &__text {
    padding-bottom: 40px;

    @include u.breakpoint-up(large) {
      padding: 0 15px 40px;
    }
  }

  &__accordion {
    &--item {
      border-bottom: 0.125rem solid #f0f0f0;
      padding-top: 25px;
      cursor: pointer;

      &:hover {
        color: var(--softred);
      }
    }

    &--button {
      display: flex;
      justify-content: space-between;
      padding-bottom: 15px;

      h3 {
        font-size: 15px;
        font-weight: 500;
      }
    }

    &--content {
      max-height: 0;
      overflow: hidden;
      transition: max-height 1000ms ease;

      p {
        color: var(--dimgray);
        padding-top: 15px;
        padding-bottom: 30px;
        text-align: start;
        line-height: 2.1;
        font-size: 14px;
      }
    }
  }

  &__button {
    display: flex;
    justify-content: center;
    padding-top: 60px;
    padding-bottom: 100px;

    &--button {
      display: inline-block;
      background-color: var(--softblue);
      border: 2px solid var(--softblue);
      border-radius: 0.3125rem;
      box-shadow: 0 0.1875rem 0.75rem rgba(0, 0, 0, 0.2);
      color: var(--white);
      font-size: 0.875rem;
      font-weight: 500;
      padding: 0.625rem 1.375rem;

      &:hover {
        background-color: var(--white);
        color: var(--softblue);
        transition: all 300ms ease-in-out;
      }
    }
  }
}

.faqs__accordion--item.active .faqs__accordion--content {
  max-height: 300px;
  animation: fade 1000ms ease-in-out;
}

.faqs__accordion--item.active svg {
  transform: rotate(180deg);

  path {
    stroke: var(--softred);
  }
}

svg {
  transition: transform 500ms ease-in;
}

@keyframes fade {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0px);
  }
}
